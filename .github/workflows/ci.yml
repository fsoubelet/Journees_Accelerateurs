# Run the notebooks every day at 3am (UTC time) and pushes
name: Test Notebooks with Papermill

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * *"   # Daily at 3 AM UTC

jobs:
  run-notebooks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.13
          enable-cache: true
          activate-environment: true

      - name: Install dependencies
        run: |
          uv pip install papermill jupyter nbconvert \
            xsuite xtrack xpart xfields xobjects xcoll xplt xwakes \
            pint py-bobyqa cpymad ipywidgets ipympl \
            scipy numpy pandas matplotlib setuptools

      # Run notebooks in required order
      - name: Run main notebooks with papermill
        run: |
          mkdir -p executed
          papermill 00_maille.ipynb executed/00_maille.ipynb -k python3 --execution-timeout 600
          papermill 01_optique.ipynb executed/01_optique.ipynb -k python3 --execution-timeout 600
          papermill 02_impedance.ipynb executed/02_impedance.ipynb -k python3 --execution-timeout 600

      - name: Run extra notebooks with papermill
        run: |
          cd extras
          papermill 03_characterisation_espace_phase.ipynb ../executed/03_characterisation_espace_phase.ipynb -k python3 --execution-timeout 600
          papermill 04_optimisation_topologie.ipynb ../executed/04_optimisation_topologie.ipynb -k python3 --execution-timeout 600
          papermill 05_extraction_lente.ipynb ../executed/05_extraction_lente.ipynb -k python3 --execution-timeout 600
          papermill 06_formats.ipynb ../executed/06_formats.ipynb -k python3 --execution-timeout 600
          cd ..

      - name: Convert executed notebooks to HTML
        run: |
          mkdir -p html
          for nb in executed/*.ipynb; do
            jupyter nbconvert --to html "$nb" --output-dir html
          done

      - name: Generate index.html
        run: |
          declare -A DESCRIPTIONS=(
            ["00_maille.html"]="Conception de la maille PIMMS"
            ["01_optique.html"]="Optimisation des fonctions optiques"
            ["02_impedance.html"]="Mitigation d'une instabilité dûe à l'impédance de la cavité RF"
            ["03_characterisation_espace_phase.html"]="Caractérisation de l'espace des phases pour extraction lente"
            ["04_optimisation_topologie.html"]="Optimisation de la topologie de l'espace des phases pour extraction lente"
            ["05_extraction_lente.html"]="Simulation et optimisation d'extraction lente via tracking"
            ["06_formats.html"]="Aperçu des différents formats supportés par Xsuite"
          )

          {
            echo "<html><head><meta charset='utf-8'><title>Notebooks exécutés</title></head><body>"
            echo "<h1>Résultats des notebooks</h1>"

            echo "<h2>Notebooks présentés</h2><ul>"
            for nb in 00_maille.html 01_optique.html 02_impedance.html; do
              desc=${DESCRIPTIONS[$nb]}
              echo "<li>$desc: <a href=\"$nb\">$nb</a></li>"
            done
            echo "</ul>"

            echo "<h2>Notebooks supplémentaires</h2><ul>"
            for nb in 03_characterisation_espace_phase.html 04_optimisation_topologie.html 05_extraction_lente.html 06_formats.html; do
              desc=${DESCRIPTIONS[$nb]}
              echo "<li>$desc: <a href=\"$nb\">$nb</a></li>"
            done
            echo "</ul>"

            echo "</body></html>"
          } > html/index.html

      - name: Upload executed notebooks (ipynb + html) as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: executed-notebooks
          path: |
            executed/*.ipynb
            html/*.html

      # Upload HTML folder for GitHub Pages
      - name: Upload HTML to Pages artifact
        uses: actions/upload-pages-artifact@v4
        with:
          path: html

  deploy:
    needs: run-notebooks
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write
      actions: read

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
